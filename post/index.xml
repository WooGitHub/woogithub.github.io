<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Woo_home Blog</title>
    <link>https://woogithub.github.io/post/</link>
    <description>Recent content in Posts on Woo_home Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 06 Dec 2019 00:14:19 +0800</lastBuildDate>
    
	<atom:link href="https://woogithub.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JVM 类加载机制</title>
      <link>https://woogithub.github.io/post/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 06 Dec 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/</guid>
      <description>类加载的时机 类从被加载到虚拟机内存中开始，到卸载出内存为止，它的整个生命周期包括：==加载（Loading）、验证（Verification</description>
    </item>
    
    <item>
      <title>Python面试题</title>
      <link>https://woogithub.github.io/post/python%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Fri, 06 Dec 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/python%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>python面试题 1、一行代码实现1—100之和 1 print(sum(range(1,101))) 2、如何在一个函数内部修改全局变量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # 定义一个全局变量，注意</description>
    </item>
    
    <item>
      <title>深入理解ConcurrentHashMap</title>
      <link>https://woogithub.github.io/post/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3-concurrenthashmap/</link>
      <pubDate>Thu, 05 Dec 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3-concurrenthashmap/</guid>
      <description>什么是 ConCurrentHashMap？ ConCurrentHashMap 是 java1.5新引入的JUC（java.util.concurrent）包成员，是线程安全的 HashMap</description>
    </item>
    
    <item>
      <title>深入理解LinkedList</title>
      <link>https://woogithub.github.io/post/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3linkedlist/</link>
      <pubDate>Tue, 03 Dec 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3linkedlist/</guid>
      <description>什么是LinkedList？ LinkedList是一种双向链表。那什么是双向链表？根据双向链表的特点就是会有头节点和尾节点，并且节点之间是通</description>
    </item>
    
    <item>
      <title>深入理解Vector</title>
      <link>https://woogithub.github.io/post/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3vector/</link>
      <pubDate>Tue, 03 Dec 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3vector/</guid>
      <description>什么是Vector？ Vector是一个可以实现自动增长的对象数组（简称动态数组），可以随着向量元素的增加而动态地增长，实际上是一种动态顺序表</description>
    </item>
    
    <item>
      <title>如何利用python制作一个解压缩软件</title>
      <link>https://woogithub.github.io/post/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%A7%A3%E5%8E%8B%E7%BC%A9%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Tue, 12 Nov 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%A7%A3%E5%8E%8B%E7%BC%A9%E8%BD%AF%E4%BB%B6/</guid>
      <description>如何利用python制作一个解压缩软件 python实现解压缩的重要模块就是——zipfile，其次是os 安装zipfile模块 首先得安装zi</description>
    </item>
    
    <item>
      <title>SpringBoot&#43;MyBatis&#43;thymeleaf实现增删改查（超详细）</title>
      <link>https://woogithub.github.io/post/springboot&#43;mybatis&#43;thymeleaf-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E5%AE%9E%E4%BE%8B%E8%B6%85%E8%AF%A6%E7%BB%86/</link>
      <pubDate>Wed, 14 Aug 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/springboot&#43;mybatis&#43;thymeleaf-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E5%AE%9E%E4%BE%8B%E8%B6%85%E8%AF%A6%E7%BB%86/</guid>
      <description>导语： 刚学springboot几天，做了个小例子，感觉springboot很好用。相比ssm，springboot除去了很多的繁杂的配置，使</description>
    </item>
    
    <item>
      <title>Ajax的GET和POST请求</title>
      <link>https://woogithub.github.io/post/ajax%E7%9A%84get%E8%AF%B7%E6%B1%82%E5%92%8Cpost%E8%AF%B7%E6%B1%82%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 10 Aug 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/ajax%E7%9A%84get%E8%AF%B7%E6%B1%82%E5%92%8Cpost%E8%AF%B7%E6%B1%82%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>Ajax 是什么? Asynchronous Javascript And XML”（异步JavaScript和XML）， 并不是新的技术，只是把原有的技术，整合到一起而已。 1.使用CSS和XHTML来</description>
    </item>
    
    <item>
      <title>jQuery的GET和POST方法</title>
      <link>https://woogithub.github.io/post/jquery%E7%9A%84get%E6%96%B9%E6%B3%95%E5%92%8Cpost%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 10 Aug 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/jquery%E7%9A%84get%E6%96%B9%E6%B3%95%E5%92%8Cpost%E6%96%B9%E6%B3%95/</guid>
      <description>JQuery 是什么? javascript 的代码框架。 有什么用? 简化代码，提高效率。 核心 write less do more , 写得更少，做的更多。 load 1 2 3 4 5 6 7 8 9 &amp;lt;a href=&amp;#34;&amp;#34; onclick=&amp;#34;l</description>
    </item>
    
    <item>
      <title>springboot整合mybatis向页面返回数据</title>
      <link>https://woogithub.github.io/post/springboot%E5%90%91%E9%A1%B5%E9%9D%A2%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Sat, 10 Aug 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/springboot%E5%90%91%E9%A1%B5%E9%9D%A2%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/</guid>
      <description>pom.xml文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61</description>
    </item>
    
    <item>
      <title>几种实现字符串反转的方式</title>
      <link>https://woogithub.github.io/post/%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC%E7%9A%84%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sat, 10 Aug 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC%E7%9A%84%E6%96%B9%E5%BC%8F/</guid>
      <description>charAt（int index） 利用 charAt 的方式，是一个能够用来检索特定索引下的字符的String实例的方法，charAt()方法返回指定索引位</description>
    </item>
    
    <item>
      <title>编写一个接口，实现代理设计模式</title>
      <link>https://woogithub.github.io/post/%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8Fproxy/</link>
      <pubDate>Sat, 10 Aug 2019 00:14:19 +0800</pubDate>
      
      <guid>https://woogithub.github.io/post/%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8Fproxy/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 interface NetWork{ public void name(); } class Demo1 implements NetWork{ @Override public void name() { System.out.prin</description>
    </item>
    
  </channel>
</rss>